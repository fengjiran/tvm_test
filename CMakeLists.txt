cmake_minimum_required(VERSION 3.18)
project(tvm_test)
set(CMAKE_CXX_STANDARD 17)

IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
    message(STATUS "Current Platform: Linux ")
    set(TVM_INCLUDE /home/richard/project/tvm/include)
    set(DLPACK_INCLUDE /home/richard/project/tvm/3rdparty/dlpack/include)
    set(DMLC_INCLUDE /home/richard/project/tvm/3rdparty/dmlc-core/include)
    set(TVM_RUNTIME_DLL /home/richard/project/tvm/build/libtvm_runtime.so)
    set(OPENXAE_INCLUDE /home/richard/project/openXAE/include)
    set(OPENXAE_DLL /home/richard/project/openXAE/build/libopenXAE.so)
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Darwin")
    message(STATUS "Current Platform: MacOS")
    set(TVM_INCLUDE /Users/richard/Desktop/tvm/include)
    set(DLPACK_INCLUDE /Users/richard/Desktop/tvm/3rdparty/dlpack/include)
    set(DMLC_INCLUDE /Users/richard/Desktop/tvm/3rdparty/dmlc-core/include)
    set(TVM_RUNTIME_DLL /Users/richard/Desktop/tvm/build/libtvm_runtime.dylib)
    set(OPENXAE_INCLUDE /Users/richard/Desktop/openXAE/include)
    set(OPENXAE_DLL /Users/richard/Desktop/openXAE/build/libopenXAE.dylib)
ELSE ()
    message(STATUS "Other Platform: ${CMAKE_SYSTEM_NAME}")
ENDIF (CMAKE_SYSTEM_NAME MATCHES "Linux")

message(STATUS "openXAE include path: " ${OPENXAE_INCLUDE})
message(STATUS "openXAE DLL path: " ${OPENXAE_DLL})

include_directories(${OPENXAE_INCLUDE})
add_executable(${PROJECT_NAME} main.cpp test_packedfunc.cpp test_packedfunc.h)
target_link_libraries(${PROJECT_NAME} ${OPENXAE_DLL})
